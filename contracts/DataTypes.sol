// SPDX-License-Identifier: MIT
pragma solidity >=0.4.22 <0.9.0;

contract DataTypes {

  bool private booleano;

  constructor() {
    booleano = true;
  }

  // TODO Implement a public function with name getBooleanFromStateVariable()
  //      that return a true value from state variable
  function getBooleanFromStateVariable() public view returns(bool){
    return booleano;
  }

  // TODO Implement a public function with name getSum(x, y)
  //      that returns the result of the sum of two numbers


  // TODO Implement a public function with name getPi()
  //      that return the value of PI (π) = 3.1415
  // INFO The value of PI never changes


  // TODO Implement a public function with name calculateCircleArea(radius)
  //      that return the result of circle area
  // INFO Reuse PI


  // TODO Implement a public function with name generateInstitutionalEmail(name)
  //      that return the result of the concatenation of the name separated by dots and in lowercase ignoring the accents
  // INFO The institution is called "Valle Grande" and the email domain is "vallegrande.edu.pe"
  // INFO Example: generateInstitutionalEmail("Pepito Pérez") that return "pepito.perez@vallegrande.edu.pe"


  // TODO Implement a public function with name saveUserInfo(address, name)
  //      this method must store the information of the users in the blockchain
  // INFO The structure is:
  //      ----------------------------------------------------------------------------------------------------------
  //      | address(ID*)                                | name          | email                           | status |
  //      ----------------------------------------------------------------------------------------------------------
  //      | 0xb7cE2715e3383Fb8bc7591dDc5130f864a8E4Fe6  | Adam Smith    | adam.smith@vallegrande.edu.pe   | ACTIVE |
  //      ----------------------------------------------------------------------------------------------------------
  //      | 0xE21fFB2eC6103F2Ba8a18102Ba6252B41C386948  | Denis Diderot | denis.diderot@vallegrande.edu.pe| ACTIVE |
  //      ----------------------------------------------------------------------------------------------------------
  // INFO The address is the key and it is unrepeatable
  // INFO The email is autogenerated (reuse the method already implemented previously)
  // INFO The status is ACTIVE by default
  // INFO There are different status: ACTIVE, INACTIVE, DELETED, BANNED


  // TODO Implement a public function with name retrieveUserInfo(address)
  //      that return the user info stored previously

  
}
